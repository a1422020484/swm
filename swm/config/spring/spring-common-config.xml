<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jms="http://www.springframework.org/schema/jms" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd 
		http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.0.xsd ">
		
		<!-- <bean id="BeanContextTest" class="swm.helloworld.BeanContextTest"></bean> -->
		<!-- <bean id="ContentTypeTest" class="swm.httpTest.ContentTypeTest"></bean> -->
		<!-- <bean id="/helloCache" class="swm.helloworld.HelloWorldCacheController">
			<property name="cacheSeconds" value="5"></property>
		</bean> -->
		<!-- 可以扫描controller、service、... 这里让扫描controller，指定controller的包 -->
		<!-- <context:component-scan base-package="swm.helloworld">
			<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
			<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" />
		</context:component-scan>
		<context:component-scan base-package="swm.httpTest">
			<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
			<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" />
		</context:component-scan>
		<context:component-scan base-package="swm.controller">
			<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
			<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" />
		</context:component-scan>
		<context:component-scan base-package="swm.service">
			<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
			<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" />
		</context:component-scan> -->
		<context:component-scan base-package="swm">
			<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
			<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" />
		</context:component-scan>
			<!--注解映射器 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/> -->
	<!--注解适配器 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/> -->
		<mvc:annotation-driven />
		
		<!-- 视图解析器 解析jsp解析，默认使用jstl标签，classpath下的得有jstl的包 -->
		<bean
			class="org.springframework.web.servlet.view.InternalResourceViewResolver">
			<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/> 
			<!-- 配置jsp路径的前缀 -->
			<property name="prefix" value="/WEB-INF/jsp/" />
			<!-- 配置jsp路径的后缀 -->
			<property name="suffix" value=".jsp" />
		</bean>
		<!-- <bean name="/hello" class="swm.helloworld.HelloWorldController"/> -->
		
	
	<!-- 使用 mvc:annotation-driven代替上边注解映射器和注解适配器配置 mvc:annotation-driven默认加载很多的参数绑定方法， 
		比如json转换解析器就默认加载了，如果使用mvc:annotation-driven不用配置上边的RequestMappingHandlerMapping和RequestMappingHandlerAdapter 
		实际开发时使用mvc:annotation-driven -->
	<!-- <mvc:annotation-driven conversion-service="conversionService" validator="validator"></mvc:annotation-driven> -->
	<!-- <mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8" />
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven> -->
		
		<!-- 加载db.properties文件中的内容，db.properties文件中key命名要有一定的特殊规则 -->
		<context:property-placeholder location="classpath:db.properties" />

	
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
			destroy-method="close">
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<property name="maxActive" value="30" />
			<property name="maxIdle" value="5" />
		</bean>
		
				<!-- 事务管理器 对mybatis操作数据库事务控制，spring使用jdbc的事务控制类-->
		<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="dataSource"/>
		</bean>
		
		
		<!-- 通知 -->
		<tx:advice id="txAdvice" transaction-manager="transactionManager">
			<tx:attributes>
				<!-- 传播行为 -->
				<tx:method name="save*" propagation="REQUIRED"/>
				<tx:method name="delete*" propagation="REQUIRED"/>
				<tx:method name="insert*" propagation="REQUIRED"/>
				<tx:method name="update*" propagation="REQUIRED"/>
				<tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
				<tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
				<tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
			</tx:attributes>
		</tx:advice>
		<!-- aop -->
		<aop:config>
			<aop:advisor advice-ref="txAdvice" pointcut="execution(* swm.service.impl.*.*(..))"/>
			<!-- <aop:pointcut expression="execution(* swm.service.impl.*.*(..))" id="service"/> -->
		</aop:config>
		
		<!-- sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 加载mybatis的全局配置文件 -->
		<property name="configLocation" value="classpath:mybatis/sqlMapConfig.xml" />
		<property name="mapperLocations" value="classpath*:mybatis/*Mapper.xml" />
	</bean>
	<!-- mapper扫描器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描包路径，如果需要扫描多个包，中间使用半角逗号隔开 -->
		<property name="basePackage" value="swm.mapper"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
		
		
		</beans>